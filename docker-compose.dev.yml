version: "3.5"
name: chatnet
services:
  client:
    container_name: nextjs
    depends_on:
      - server
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    
    environment:
      - NEXT_API_URL=http://localhost:7000
      - WATCHPACK_POLLING=true
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
    
    restart: always
    ports:
      - 3000:3000
  
  server:
    container_name: dotnet
    depends_on:
      - postgres
      - pgadmin4
      - mongo
    build:
      context: ./server/Chat.NET
      dockerfile: ./Web/Dockerfile
    volumes:
      - ~/.aspnet/https:/https
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    env_file:
      - .env
    ports:
      - 5000:80
  
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgresql:/var/lib/postgresql/data
  
  pgadmin4:
    container_name: pgadmin4
    image: dpage/pgadmin4
    user: "${UID}:${GID}"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin4:/var/lib/pgadmin
    ports:
      - 5433:80
    depends_on:
      - postgres

  mongo:
    container_name: mongodb
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongodb:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
