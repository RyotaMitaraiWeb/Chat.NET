@use 'sass:map';
@import './util.scss';

$primary-colors: (
  'light': #4d3ab7,
  'dark': #9c88fd,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$secondary-colors: (
  'light': #ffd637,
  'dark': #ffe478,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$success-colors: (
  'light': #32c938,
  'dark': #66bb6a,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$error-colors: (
  'light': #e53935,
  'dark': #ff9999,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$warning-colors: (
  'light': #ef8b00,
  'dark': #ffa726,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$info-colors: (
  'light': #1250ba,
  'dark': #02abd1,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$palette: (
  'primary': $primary-colors,
  'secondary': $secondary-colors,
  'success': $success-colors,
  'error': $error-colors,
  'warning': $warning-colors,
  'info': $info-colors,
);

@each $color, $values in $palette {
  .background-#{$color} {
    background-color: map.get($values, 'dark');
    @include apply-transition(background-color 0.2s);

    &:disabled,
    & :disabled {
      background-color: rgba(255, 255, 255, 0.12);
    }

    @media (prefers-color-scheme: light) {
      background-color: map.get($values, 'light');

      &:disabled,
      & .disabled {
        background-color: rgba(0, 0, 0, 0.12);
      }
    }
  }

  .text-#{$color} {
    color: map.get($values, 'dark');
    @media (prefers-color-scheme: light) {
      background-color: map.get($values, 'light');
    }
  }

  .text-on-#{$color} {
    color: map.get($values, 'contrast-text-dark');
    @include apply-transition(color 0.2s);

    &:disabled,
    & :disabled {
      color: rgba(255, 255, 255, 0.3);
    }

    @media (prefers-color-scheme: light) {
      color: map.get($values, 'contrast-text-light');

      &:disabled,
      & .disabled {
        color: rgba(0, 0, 0, 0.26);
      }
    }
  }

  .#{$color} {
    @extend .text-on-#{$color};
    @extend .background-#{$color};

    @include apply-transition(background-color 0.2s, color 0.2s);

    .contrast-text-color {
      color: map.get($values, 'contrast-text-dark');
      @include apply-transition(color 0.2s);

      @media (prefers-color-scheme: light) {
        color: map.get($values, 'contrast-text-light');
      }
    }
  }
}

$background-dark: #121212;
$background-light: #e9e4e4;
$accent-light: white;
$accent-dark: #383838;
$text-emphasis-dark: rgba(255, 255, 255, 0.87);
$text-medium-dark: rgba(255, 255, 255, 0.6);
$text-emphasis-light: black;
$text-medium-light: #0e0e0e;
$shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;

.theme-background {
  background-color: $background-dark;
  @include apply-transition(background-color 0.2s);

  @media (prefers-color-scheme: light) {
    background-color: $background-light;
  }
}

.accent-background {
  background-color: $accent-dark;
  @include apply-transition(background-color 0.2s);

  &:disabled,
  & :disabled {
    background-color: rgba(255, 255, 255, 0.12);
  }

  @media (prefers-color-scheme: light) {
    background-color: $accent-light;

    &:disabled,
    & .disabled {
      background-color: rgba(0, 0, 0, 0.12);
    }
  }
}

.theme-text {
  color: $text-medium-dark;
  @include apply-transition(color 0.2s);

  &:disabled,
  & :disabled {
    color: rgba(255, 255, 255, 0.3);
  }

  @media (prefers-color-scheme: light) {
    color: $text-medium-light;
    &:disabled,
    & .disabled {
      color: rgba(0, 0, 0, 0.26);
    }
  }
}

.theme-emphasis-text {
  color: $text-emphasis-dark;
  @include apply-transition(background-color 0.2s);
  &:disabled,
  & :disabled {
    color: rgba(255, 255, 255, 0.3);
  }

  @media (prefers-color-scheme: light) {
    color: $text-emphasis-light;
    &:disabled,
    & .disabled {
      color: rgba(0, 0, 0, 0.26);
    }
  }
}

.accent {
  @extend .accent-background;
  @extend .theme-text;
  @include apply-transition(background-color 0.2s, color 0.2s);
}

.accent-emphasis {
  @extend .accent-background;
  @extend .theme-emphasis-text;
  @include apply-transition(background-color 0.2s, color 0.2s);
}

.shadow {
  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
}
