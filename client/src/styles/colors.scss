@use 'sass:map';
@import './util.scss';

$primary-colors: (
  'light': #4d3ab7,
  'dark': #9c88fd,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$secondary-colors: (
  'light': #ffd637,
  'dark': #ffe478,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$success-colors: (
  'light': #32c938,
  'dark': #66bb6a,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$error-colors: (
  'light': #e53935,
  'dark': #ff9999,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$warning-colors: (
  'light': #ef8b00,
  'dark': #ffa726,
  'contrast-text-light': black,
  'contrast-text-dark': black,
);

$info-colors: (
  'light': #1250ba,
  'dark': #02abd1,
  'contrast-text-light': white,
  'contrast-text-dark': black,
);

$palette: (
  'primary': $primary-colors,
  'secondary': $secondary-colors,
  'success': $success-colors,
  'error': $error-colors,
  'warning': $warning-colors,
  'info': $info-colors,
);

@mixin apply-palette-backgrounds() {
  @each $color, $values in $palette {
    &.background-#{$color} {
      @include apply-transition(background-color 0.2s);
      @include apply-values-for-modes(
        background-color,
        map.get($values, 'dark'),
        map.get($values, 'light')
      );

      &:disabled,
      & :disabled,
      &.disabled,
      & .disabled {
        @include apply-values-for-modes(
          background-color,
          rgba(255, 255, 255, 0.12),
          rgba(0, 0, 0, 0.12)
        );

        @include apply-values-for-modes(color, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.26));
      }

      @include apply-transition(color 0.2s);
      @include apply-values-for-modes(
        color,
        map.get($values, 'contrast-text-dark'),
        map.get($values, 'contrast-text-light')
      );
    }
  }
}

@mixin apply-palette-text() {
  @each $color, $values in $palette {
    &.text-#{$color} {
      @include apply-values-for-modes(color, map.get($values, 'dark'), map.get($values, 'light'));
    }
  }
}

$background-dark: #121212;
$background-light: #e9e4e4;
$accent-light: white;
$accent-dark: #383838;
$text-emphasis-dark: rgba(255, 255, 255, 0.87);
$text-medium-dark: rgba(255, 255, 255, 0.6);
$text-emphasis-light: black;
$text-medium-light: #0e0e0e;
$shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;

@mixin apply-theme-background() {
  @include apply-transition(background-color 0.2s);
  @include apply-values-for-modes(background-color, $background-dark, $background-light);
}

@mixin apply-accent-background() {
  @include apply-values-for-modes(background-color, $accent-dark, $accent-light);
  @include apply-transition(background-color 0.2s);

  &:disabled,
  & :disabled {
    @include apply-values-for-modes(
      background-color,
      rgba(255, 255, 255, 0.12),
      rgba(0, 0, 0, 0.12)
    );
  }
}

@mixin apply-theme-text() {
  @include apply-values-for-modes(color, $text-medium-dark, $text-medium-light);
  @include apply-transition(color 0.2s);

  &:disabled,
  & :disabled {
    @include apply-values-for-modes(color, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.26));
  }
}

@mixin apply-theme-emphasis-text() {
  @include apply-values-for-modes(color, $text-emphasis-dark, $text-emphasis-light);
  @include apply-transition(color 0.2s);

  &:disabled,
  & :disabled {
    @include apply-values-for-modes(color, rgba(255, 255, 255, 0.3), rgba(0, 0, 0, 0.26));
  }
}

@mixin shadow() {
  box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
}
